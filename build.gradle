plugins {
    id 'java'
    id 'org.springframework.boot' version "$springBootVersion"
    id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
    id 'io.freefair.lombok' version "$lombokPluginVersion"
    id 'org.springdoc.openapi-gradle-plugin' version "$openApiGradlePluginVersion"
}

group 'com.seoLeir'
version '1.0.0'

repositories {
    mavenLocal()
    mavenCentral()
}

compileJava {
    options.compilerArgs += [
            '-Amapstruct.suppressGeneratorTimestamp=true',
            '-Amapstruct.suppressGeneratorVersionInfoComment=true',
            '-Amapstruct.verbose=true'
    ]
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.security:spring-security-oauth2-client'
    implementation 'org.springframework.security:spring-security-oauth2-jose'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.data:spring-data-jpa'
    implementation 'org.springframework.data:spring-data-envers'
    implementation 'org.liquibase:liquibase-core'

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$springdocOpenapiStarterWebmvcUi"

    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
    implementation "org.projectlombok:lombok-mapstruct-binding:$lombokMapstructBinding"

    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'

    annotationProcessor 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "org.testcontainers:postgresql:$testContainersVersion"
}

test {
    useJUnitPlatform()
}